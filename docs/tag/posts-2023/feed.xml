<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="/tekpeek/tag/posts-2023/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/tekpeek/" rel="alternate" type="text/html" />
  <updated>2024-12-30T14:05:19+00:00</updated>
  <id>/tekpeek/tag/posts-2023/feed.xml</id>

  
  
  

  
    <title type="html">Tekpeek - Blogs | </title>
  

  
    <subtitle>Thoughts, Projects and Explorations from Avinash S</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">TubeStore - Free Youtube Storage</title>
      <link href="/tekpeek/TubeStore" rel="alternate" type="text/html" title="TubeStore - Free Youtube Storage" />
      <published>2023-11-09T10:18:00+00:00</published>
      <updated>2023-11-09T10:18:00+00:00</updated>
      <id>/tekpeek/TubeStore</id>
      <content type="html" xml:base="/tekpeek/TubeStore">&lt;h1 id=&quot;cloud-storage&quot;&gt;Cloud Storage&lt;/h1&gt;
&lt;p&gt;Cloud storage subscriptions are in high demand due to the exponential growth of data generation. With the advent of digital technology, data production has increased tremendously, leading to a need for more storage capacity. You may have experienced a situation where your Google Drive or other cloud storage shows a warning of reaching its limits. To get more storage, you need to pay more, and this can be quite expensive.&lt;/p&gt;

&lt;p&gt;Within these vast amounts of data, we often have some items that are not accessed frequently, but that we still need for possible future use or as a memory to keep with ourselves. However, you may not have considered YouTube’s storage and its growing number of content creators. YouTube handles a significant amount of data daily, mostly videos from these content creators, and it doesn’t charge any money for that. What if we could use that storage for our data too? Of course, we’re not trying to steal YouTube’s storage, but merely suggesting an idea of how we could make use of it.&lt;/p&gt;

&lt;h1 id=&quot;what-is-tubestore-&quot;&gt;What is TubeStore ?&lt;/h1&gt;
&lt;p&gt;TubeStore is a tool written in python which can be used to convert any data into a video format, and revert back to the original final without any loss.&lt;/p&gt;

&lt;h1 id=&quot;how-does-it-work-&quot;&gt;How does it work ?&lt;/h1&gt;
&lt;p&gt;As we all know, data comes in different formats, but all these formats are stored in 0s and 1s at the end. This is where this tool comes in. It converts all the data to 0s and 1s and creates image frames where each pixel has a value of 0 or 1. This way, if we arrange the binary numbers in the same sequence, we can represent the data in a set of images/frames - thus creating a video.&lt;/p&gt;

&lt;p&gt;Using this method, we can save our data in the form of videos, which is a novel approach to data storage. The process is simple, and it is an excellent way to save data that is not accessed frequently. It is also a great way to keep a memory that we need to keep with ourselves.&lt;/p&gt;

&lt;p&gt;This tool is useful for taking binary values and shaping them into a different form, but there are two disadvantages that we need to keep in mind. Firstly, the size of the videos generated can be up to 4 times the size of the original file. This means that you need to have a lot of storage space to accommodate the videos that are generated. Secondly, we need a lot of RAM and processing power to convert large files to videos. This can be a significant challenge, especially when dealing with large files.&lt;/p&gt;

&lt;p&gt;Currently, while testing on Linux (Ubuntu 22.04), this tool can convert files up to 200 MB into videos. Beyond that, the RAM gets filled, and the program is killed by the system for safety reasons. However, this is still a significant milestone, and it shows that there is potential for further development of this tool.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;In conclusion, the idea of using YouTube’s storage for our data is a novel approach to data storage. It is an excellent way to save data that is not accessed frequently, and it is also a great way to keep a memory that we need to keep with ourselves. However, we need to keep in mind the two disadvantages of this tool, namely the large size of the videos generated and the need for a lot of RAM and processing power. Nonetheless, this is still an exciting development, and it is worth exploring further to see how it can be improved.&lt;/p&gt;

&lt;p&gt;Also, it has been noticed that converting png files causes corruption while reverting back.&lt;/p&gt;

&lt;p&gt;The github repository can be accessed here - https://github.com/AvinashSubhash/TubeStore&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Avinash</name>
        
        
      </author>

      

      
        <category term="posts-2023" />
      
        <category term="tools" />
      

      
        <summary type="html">Cloud Storage Cloud storage subscriptions are in high demand due to the exponential growth of data generation. With the advent of digital technology, data production has increased tremendously, leading to a need for more storage capacity. You may have experienced a situation where your Google Drive or other cloud storage shows a warning of reaching its limits. To get more storage, you need to pay more, and this can be quite expensive.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">How to Make GRUB Remember Your Last Selection on Boot</title>
      <link href="/tekpeek/Grub-Boot-Selection" rel="alternate" type="text/html" title="How to Make GRUB Remember Your Last Selection on Boot" />
      <published>2023-09-23T10:18:00+00:00</published>
      <updated>2023-09-23T10:18:00+00:00</updated>
      <id>/tekpeek/Grub-Boot-Selection</id>
      <content type="html" xml:base="/tekpeek/Grub-Boot-Selection">&lt;h2 id=&quot;introduction-&quot;&gt;Introduction :&lt;/h2&gt;
&lt;p&gt;GRUB is an essential part of most Linux systems, responsible for managing the boot process and allowing you to choose which operating system to boot into when you start your computer. By default, GRUB usually selects the first entry in the boot menu. However, many users prefer to make GRUB remember their last selection to streamline the boot process. In this tutorial, we’ll walk you through the steps to configure GRUB to remember its last selection on boot.&lt;/p&gt;

&lt;h2 id=&quot;step-1-opening-the-grub-configuration-file&quot;&gt;Step 1: Opening the GRUB Configuration File&lt;/h2&gt;
&lt;p&gt;The first step is to open the GRUB configuration file, which is located at /etc/default/grub. You’ll need superuser (root) privileges to edit this file, so use a text editor like ‘nano’ or ‘vi’ with the ‘sudo’ command&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nano /etc/default/grub&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-2-setting-the-value-of-grub_default-tosaved&quot;&gt;Step 2: Setting the Value of GRUB_DEFAULT to ’saved’&lt;/h2&gt;
&lt;p&gt;Inside the configuration file, you’ll find various GRUB settings. Look for the GRUB_DEFAULT variable. By default, it may be set to a numerical value, such as 0 for the first menu entry. Change it to:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GRUB_DEFAULT=saved&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-3-setting-the-value-of-grub_savedefault-totrue&quot;&gt;Step 3: Setting the Value of GRUB_SAVEDEFAULT to ’true’&lt;/h2&gt;
&lt;p&gt;Next, find the GRUB_SAVEDEFAULT variable in the configuration file. If it’s not present, you can add it. Set its value to ‘true’&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GRUB_SAVEDEFAULT=true&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-4-saving-thefile&quot;&gt;Step 4: Saving the File&lt;/h2&gt;
&lt;p&gt;After making these changes, save the GRUB configuration file and exit your text editor. In ‘nano,’ you can do this by pressing Ctrl + O to save and Ctrl + X to exit. In ‘vi,’ you can save by pressing Esc, then typing :wq, and hitting Enter.&lt;/p&gt;

&lt;h2 id=&quot;step-5-generate-the-grub-configuration-file&quot;&gt;Step 5: Generate the GRUB Configuration File&lt;/h2&gt;
&lt;p&gt;The final step is to generate the GRUB configuration file using the grub-mkconfig command. This command will take the changes you made to /etc/default/grub and apply them to the actual GRUB configuration&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command rebuilds the GRUB configuration file located at /boot/grub/grub.cfg. After running this command, GRUB will remember your last selection and use it as the default entry during the next boot.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Configuring GRUB to remember its last selection on boot can be a time-saver and a convenient feature for those who frequently switch between different operating systems or boot options. By following the steps outlined in this guide, you can easily make GRUB remember your last selection and improve your overall boot experience on your Linux system.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Avinash</name>
        
        
      </author>

      

      
        <category term="posts-2023" />
      

      
        <summary type="html">Introduction : GRUB is an essential part of most Linux systems, responsible for managing the boot process and allowing you to choose which operating system to boot into when you start your computer. By default, GRUB usually selects the first entry in the boot menu. However, many users prefer to make GRUB remember their last selection to streamline the boot process. In this tutorial, we’ll walk you through the steps to configure GRUB to remember its last selection on boot.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Cloak and Commit - Concealing Confidential Data with Local Git Repositories in Linux</title>
      <link href="/tekpeek/Cloak-and-Commit" rel="alternate" type="text/html" title="Cloak and Commit - Concealing Confidential Data with Local Git Repositories in Linux" />
      <published>2023-06-30T00:00:00+00:00</published>
      <updated>2023-06-30T00:00:00+00:00</updated>
      <id>/tekpeek/Cloak-and-Commit</id>
      <content type="html" xml:base="/tekpeek/Cloak-and-Commit">&lt;h2 id=&quot;introduction-&quot;&gt;Introduction :&lt;/h2&gt;
&lt;p&gt;In the world of version control systems, Git has emerged as a popular and versatile tool for managing source code. However, its capabilities extend beyond code management. In this article, we will explore a unique application of Git: using a local repository to hide sensitive data in Linux. By leveraging the branch and access control features of Git, we can create a secure environment where only the root user can access the hidden branch and its concealed files.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To follow the steps outlined in this article, you need to have Git installed on your Linux machine. You can install Git by running the appropriate package manager command for your distribution.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Step 1: Initializing a Local Git Repository
Open a terminal and navigate to the directory where you want to create the local repository.
Run the command git init to initialize a new Git repository in the current directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 2: Create a Branch for Hidden Data
Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout -b hidden&lt;/code&gt; to create a new branch called “hidden” and switch to it. This branch will serve as the container for our concealed files.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 3: Hiding Files
Move or copy the files you wish to conceal into the current directory. These files can be of any type, such as documents, images, or archives. Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add \&amp;lt;file1\&amp;gt; \&amp;lt;file2\&amp;gt; ...&lt;/code&gt; to stage the files for the next commit. Replace &lt;file1&gt;, &lt;file2&gt;, etc., with the names of the files you want to hide. Run the command ```git commit -m &quot;Hidden files&quot;``` to commit the changes and create a snapshot of the hidden files in the hidden branch.&lt;/file2&gt;&lt;/file1&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 4: Restricting Access to the .git Folder
Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo chown root -R .git/&lt;/code&gt; to set root as the owner of the .git folder. Run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo chmod 700 -R .git/&lt;/code&gt; to set the permissions of the .git folder to allow only the root user to access it. This ensures that only the root user can modify the branch containing the hidden files.
Accessing the Hidden Files&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To access the concealed files in the hidden branch, you need root privileges. Follow these steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open a terminal and navigate to the directory where the local Git repository is located.&lt;/li&gt;
  &lt;li&gt;Run the command sudo git checkout hidden to switch to the hidden branch.&lt;/li&gt;
  &lt;li&gt;The hidden files will now be available for viewing, editing, or extraction within the repository directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;important-considerations&quot;&gt;Important Considerations&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Always exercise caution when handling sensitive data. Ensure that you comply with applicable laws and regulations regarding data privacy and protection.&lt;/li&gt;
  &lt;li&gt;Regularly back up your data, including the hidden branch, to prevent accidental loss.&lt;/li&gt;
  &lt;li&gt;Be mindful that concealing files in a Git repository does not provide encryption or strong security measures. It is primarily intended as a means of restricting access to authorized users.&lt;/li&gt;
  &lt;li&gt;Addressing the question of why not simply set the entire folder to root access, it is essential to clarify that this method focuses on concealing files within the folder while still allowing access, rather than completely blocking access to the folder itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Using a local Git repository to hide data in Linux can be a creative and effective way to maintain confidentiality. By creating a separate branch and restricting access to the .git folder, only the root user can modify or access the hidden files. However, it is crucial to understand that this method does not provide encryption or robust security. It should be seen as an additional layer of access control rather than a substitute for proper data protection measures.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Avinash</name>
        
        
      </author>

      

      
        <category term="posts-2023" />
      

      
        <summary type="html">Introduction : In the world of version control systems, Git has emerged as a popular and versatile tool for managing source code. However, its capabilities extend beyond code management. In this article, we will explore a unique application of Git: using a local repository to hide sensitive data in Linux. By leveraging the branch and access control features of Git, we can create a secure environment where only the root user can access the hidden branch and its concealed files.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Seedr - The Ultimate Cloud-Based Torrent Client for Seamless Downloading and Streaming</title>
      <link href="/tekpeek/Seedr" rel="alternate" type="text/html" title="Seedr - The Ultimate Cloud-Based Torrent Client for Seamless Downloading and Streaming" />
      <published>2023-06-19T10:18:00+00:00</published>
      <updated>2023-06-19T10:18:00+00:00</updated>
      <id>/tekpeek/Seedr</id>
      <content type="html" xml:base="/tekpeek/Seedr">&lt;h2 id=&quot;introduction-&quot;&gt;Introduction :&lt;/h2&gt;
&lt;p&gt;In the digital age, torrents have become a popular way to share and distribute large files. However, traditional torrenting methods often require the download of files to a local computer, which can be cumbersome and time-consuming. Seedr, a revolutionary cloud-based platform, has emerged as a game-changer in the world of torrenting. In this comprehensive article, we will delve into the features, benefits, and functionality of Seedr, exploring how it simplifies the torrenting experience and provides seamless downloading and streaming capabilities.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The Concept of Seedr: Seedr introduces a novel concept in torrenting by offering a cloud-based solution. Instead of downloading torrents to your local machine, Seedr enables users to access and manage torrents directly from their web browser or mobile device. This cloud-centric approach eliminates the need for torrent clients and ensures convenience, speed, and security.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;User-Friendly Interface: Seedr boasts a user-friendly and intuitive interface that makes torrenting accessible to both novice and experienced users. Navigating through the platform is a breeze, thanks to its well-organized layout and straightforward design. Whether you are searching for torrents, managing files, or configuring settings, Seedr offers a seamless experience.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;High-Speed Torrent Downloads: One of the standout features of Seedr is its lightning-fast download speeds. With high-speed servers and optimized protocols, Seedr maximizes the download speed of torrents, significantly reducing the time required for file transfers. This feature is particularly beneficial for users who want to access large files quickly or stream media content in real time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Unlimited Bandwidth: Seedr eliminates the limitations associated with traditional torrenting by offering unlimited bandwidth to its users. This means you can download and stream torrents without worrying about hitting data caps or facing speed throttling. The unlimited bandwidth feature allows for a smooth and uninterrupted torrenting experience.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cloud Storage Integration: Seedr leverages the power of cloud storage, providing users with a convenient way to store and access their files. Once a torrent is added to Seedr, the files are securely stored in the cloud. This eliminates the need to occupy local storage space, allowing users to save valuable disk space on their devices. Additionally, cloud storage ensures that files are accessible from any device with an internet connection, enabling seamless file management and accessibility.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Privacy and Security: Seedr prioritizes user privacy and security. By using Seedr as a cloud-based torrent client, users can enjoy an added layer of privacy. Seedr shields the IP address of its users, ensuring their online activities remain anonymous. Furthermore, the platform employs secure encryption protocols to protect data integrity and prevent unauthorized access to user files.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Streaming Capabilities: Seedr goes beyond conventional torrenting by offering streaming capabilities. Once a torrent is added to Seedr, users can stream media files directly from the platform, eliminating the need to download the entire file before accessing it. Whether it’s a movie, TV show, or music album, Seedr enables users to enjoy their favorite media content in real-time, enhancing the overall user experience.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cross-Platform Compatibility: Seedr is designed to be cross-platform compatible, supporting various operating systems and devices. Whether you prefer Windows, macOS, Linux, or mobile platforms like iOS and Android, Seedr ensures a seamless torrenting experience across all devices. This flexibility allows users to access and manage their torrents on the go, providing convenience and accessibility.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Collaboration and Sharing: Seedr offers collaboration and sharing features, making sharing files easy. Users can create folders, invite collaborators, and share files securely with friends, colleagues, or clients. This functionality is particularly beneficial for collaborative projects, allowing team members to access and work on shared files effortlessly.
Additional Features: Seedr provides a range of other features to enhance the torrenting experience. Some notable features include a built-in video player for streaming media, the ability to extract compressed files directly on the platform, and the option to schedule downloads at preferred times. These additional features make Seedr a comprehensive and versatile torrenting solution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Seedr has revolutionized torrenting with its cloud-based approach, offering seamless downloading and streaming capabilities. With its user-friendly interface, high-speed downloads, unlimited bandwidth, cloud storage integration, privacy and security measures, and cross-platform compatibility, Seedr provides a superior torrenting experience. Whether you’re a torrenting enthusiast, a content creator, or a team collaborating on files, Seedr offers a powerful and convenient solution to manage and access torrents effortlessly.&lt;/p&gt;

&lt;p&gt;Seedr Offical website — https://www.seedr.cc/&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Avinash</name>
        
        
      </author>

      

      
        <category term="tools" />
      
        <category term="posts-2023" />
      

      
        <summary type="html">Introduction : In the digital age, torrents have become a popular way to share and distribute large files. However, traditional torrenting methods often require the download of files to a local computer, which can be cumbersome and time-consuming. Seedr, a revolutionary cloud-based platform, has emerged as a game-changer in the world of torrenting. In this comprehensive article, we will delve into the features, benefits, and functionality of Seedr, exploring how it simplifies the torrenting experience and provides seamless downloading and streaming capabilities.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">CleanSweep - An Arch Linux tool to clean system, home directory cache, and duplicate files.</title>
      <link href="/tekpeek/Cleansweep" rel="alternate" type="text/html" title="CleanSweep - An Arch Linux tool to clean system, home directory cache, and duplicate files." />
      <published>2023-01-06T10:18:00+00:00</published>
      <updated>2023-01-06T10:18:00+00:00</updated>
      <id>/tekpeek/Cleansweep</id>
      <content type="html" xml:base="/tekpeek/Cleansweep">&lt;h1 id=&quot;what-exactly-is-cleansweep--&quot;&gt;What exactly is CleanSweep ? :&lt;/h1&gt;
&lt;p&gt;CleanSweep is a TUI program that helps newbie Arch Linux users to cleanup their system and clear up their precious memory. CleanSweep gives out a step by step process to user to the user with the ability for the user to skip a particular step.&lt;/p&gt;

&lt;h1 id=&quot;why-did-i-create-this-tool-&quot;&gt;Why did I create this tool ?&lt;/h1&gt;

&lt;p&gt;In Arch Linux, as with any operating system, increasing cache memory can potentially improve system performance by allowing the system to store frequently accessed data in fast memory that can be quickly accessed. However, there are also potential drawbacks to increasing cache memory.&lt;/p&gt;

&lt;p&gt;One potential problem with increasing cache memory is that it can potentially consume a large amount of physical memory, which could lead to increased competition for memory resources and potentially decreased performance if there is not enough available physical memory to meet the system’s needs. Additionally, increasing cache memory may not always provide a noticeable improvement in performance, and in some cases it may even lead to decreased performance due to increased memory pressure.&lt;/p&gt;

&lt;p&gt;If we go the manual way, we have to run several commands with pacman to clen cache, removed duplicate files etc, but with this one tool, we can go through all the cleaning process step by step with the ability to skip a particular step if not interested.&lt;/p&gt;

&lt;h1 id=&quot;how-do-i-use-this-&quot;&gt;How do I use this ?&lt;/h1&gt;

&lt;p&gt;I’ts pretty simple, go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/AvinashSubhash/CleanSweep&lt;/code&gt; and follow the inctrustions written there.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Avinash</name>
        
        
      </author>

      

      
        <category term="tools" />
      
        <category term="posts-2023" />
      

      
        <summary type="html">What exactly is CleanSweep ? : CleanSweep is a TUI program that helps newbie Arch Linux users to cleanup their system and clear up their precious memory. CleanSweep gives out a step by step process to user to the user with the ability for the user to skip a particular step.</summary>
      

      
      
    </entry>
  
</feed>
